extends layout

block content
	div(class="container")
		div(class="page-header")
		h1 About the project

		p(class="lead") Read more on 
			a(href="https://github.com/crash007/IOT-sensors/blob/master/README.md") github 

		h2 Upload data
		p To upload sensor data just post id and value (to override servertime also post parameter time) to /edit/add-data. See below for a nodejs module example.
		.highlight
			pre.
				var http = require('http');
				
				function uploadSensor(id,value){
					var sensor = {"id":id, "value":value, "time":new Date()};
					var sensorString = JSON.stringify(sensor);
					
					var headers = {
						'Content-Type': 'application/json',
						'Content-Length': sensorString.length
					};
				
					var options = {
						host: 'localhost',
						port: 3000,
						path: '/edit/add-data',
						method: 'POST',
						headers: headers
					};
					
					var req = http.request(options, function(res) {
						res.setEncoding('utf-8');
						var responseString = '';
						
						res.on('data', function(data) {
					    responseString += data;
					  });
				
					  res.on('end', function() {
					    var resultObject = JSON.parse(responseString);
					    console.log("Response: "+resultObject);
					    console.log(resultObject);
					  });
					  
					});
				
					req.on('error', function(e) {
					  // TODO: handle error.
						console.log("Error when posting data");
						console.log(e);
						console.log("End of error");
					});
					console.log("Writing to request.");
					console.log(sensorString);
					req.write(sensorString);
					req.end();
					
				}
				
				module.exports.uploadSensor = uploadSensor;
		
		h2 View data as JSON
		p You can retreive all sensor data in JSON by calling /sensors/data. It's possible to filter by the parameters.
		p Example
		pre
			/sensors/data?_id=558a734c7e97b3d558847bde	 